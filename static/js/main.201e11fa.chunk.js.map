{"version":3,"sources":["styles/media.ts","logo.png","styles/breakpoints.ts","components/Shared/Header.tsx","components/Home/SearchNbResults.tsx","components/Home/SearchBar.styles.ts","components/Home/SearchBar.tsx","helpers/album.ts","components/Home/SearchResults.styles.ts","components/Home/SearchResults.tsx","requests/apiConfig.ts","requests/api.ts","requests/albums/albums.request.ts","components/Shared/Button.tsx","sections/Home.tsx","components/Album/AlbumLayout.tsx","components/Album/AlbumHeader.styles.ts","components/Album/AlbumHeader.tsx","components/Shared/Explicit.tsx","components/Album/AlbumTracks.styles.ts","components/Album/AlbumTracks.tsx","sections/Album.tsx","sections/Auth.tsx","App.tsx","reportWebVitals.ts","styles/theme.ts","styles/GlobalStyles.ts","index.tsx"],"names":["content","breakpoints","md","Container","styled","div","Logo","img","props","isHome","Title","h1","theme","white","Header","useLocation","pathname","to","src","logo","alt","className","faded","SearchNbResults","query","total","StyledInputGroup","InputGroup","outerShadow","innerShadow","primary","main","StyledInput","FormControl","black","transparentize","StyledInputIcon","Text","SearchBar","onSearch","debounceSearch","useDebounce","Prepend","size","type","placeholder","onChange","e","target","value","shortEnHumanizer","humanizeDuration","humanizer","language","languages","shortEn","h","m","s","getImage","images","image","find","width","url","length","getArtists","artists","map","artist","name","join","getTotalDuration","tracks","durationMs","reduce","track","duration_ms","units","round","delimiter","StyledLink","Link","StyledAlbum","Cover","lg","xl","CoverImg","Infos","MadeBy","small","SearchResults","results","useState","albums","setAlbums","useEffect","result","Row","album","idx","Col","xs","id","apiConfig","timeout","baseURL","process","headers","common","Pragma","Accept","authHash","encode","axiosInstance","axios","create","interceptors","request","use","a","config","token","Cookies","get","Authorization","error","Promise","reject","searchAlbums","search","offset","encodedSearh","encodeURIComponent","api","response","data","console","StyledButton","BootstrapButton","contrastText","darken","Button","children","loading","disabled","Home","setResults","setQuery","moreLoading","setMoreLoading","history","useHistory","URLSearchParams","trim","handleSearch","push","searchResults","handleShowMore","limit","items","moreResults","onClick","AlbumLayout","MainInfos","BottomLine","Technical","AlbumHeader","duration","release_date","goBack","Explicit","TrackRow","TrackColGroup","TrackCol","strong","AlbumTracks","track_number","explicit","fetcher","then","r","Album","albumId","useParams","useSWR","Alert","variant","Spinner","animation","role","redirectUri","window","location","origin","queryParams","qs","stringify","client_id","response_type","redirect_uri","state","Auth","href","App","hash","parse","substring","access_token","expires_in","set","expires","Number","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","outerShadows","shadow1","shadow2","shadow3","innerShadows","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.201e11fa.chunk.js","sourcesContent":["import { breakpoints } from './breakpoints'\n\n/**\n * @name small\n */\n\nexport const sm = (content: string): string => `\n  @media (min-width: ${breakpoints.sm}) {\n    ${content}\n  }\n`\n\n/**\n * @name medium\n */\n\nexport const md = (content: string): string => `\n  @media (min-width: ${breakpoints.md}) {\n    ${content}\n  }\n`\n\n/**\n * @name large\n */\n\nexport const lg = (content: string): string => `\n  @media (min-width: ${breakpoints.lg}) {\n    ${content}\n  }\n`\n\n/**\n * @name xl\n */\n\nexport const xl = (content: string): string => `\n  @media (min-width: ${breakpoints.xl}) {\n    ${content}\n  }\n`\n","export default __webpack_public_path__ + \"static/media/logo.24871596.png\";","export type Breakpoints = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\n\nexport type breakpointsTypes = {\n  [breakpoint in Breakpoints]: string\n}\n\nexport const breakpoints: breakpointsTypes = {\n  xs: '0px',\n  sm: '576px',\n  md: '768px',\n  lg: '992px',\n  xl: '1200px',\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport logo from 'logo.png'\nimport { Link, useLocation } from 'react-router-dom'\nimport { md } from 'styles/media'\n\n// Header container\nconst Container = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 30px;\n\n  ${md(`\n    justify-content: flex-start;\n  `)}\n`\n\n// App Logo\ninterface LogoProps extends React.HTMLProps<HTMLImageElement> {\n  isHome: boolean\n}\nconst Logo = styled.img<LogoProps>`\n  width: ${(props) => (props.isHome ? '250px' : '60px')};\n  margin-right: ${(props) => (props.isHome ? '0' : '10px')};\n  object-fit: contain;\n`\n\n// App Title\nconst Title = styled.h1`\n  a {\n    color: ${(props) => props.theme.white} !important;\n    text-decoration: none;\n  }\n`\n\n/**\n * App's header\n */\nconst Header: React.FC = () => {\n  const location = useLocation()\n  const isHome = location.pathname === '/'\n\n  return (\n    <Container>\n      <Link to=\"/\">\n        <Logo src={logo} alt=\"logo\" isHome={isHome} />\n      </Link>\n      <div className=\"d-flex flex-column\">\n        <Title>\n          <Link to=\"/\">Spotify Browser</Link>\n        </Title>\n        {isHome && <p className=\"mt-2\">Browse through Spotify's albums collection</p>}\n      </div>\n    </Container>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\n// Props\ntype Props = {\n  query: string\n  total: number\n}\n\n// Container\nconst Container = styled.div`\n  margin-bottom: 20px;\n  margin-left: 10px;\n  color: ${(props) => props.theme.faded};\n`\n\n/**\n * Search Nb Results Component\n *\n * Shows the number of results for the user query\n */\nconst SearchNbResults: React.FC<Props> = ({ query, total }) => {\n  return (\n    <Container>\n      {total === 0\n        ? `Aucun résultat pour ${query}`\n        : `${total} album${total > 1 ? 's' : ''} trouvés pour ${query}`}\n    </Container>\n  )\n}\n\nexport default SearchNbResults\n","import styled from 'styled-components/macro'\nimport { transparentize } from 'polished'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\n\n// Search bar container\nexport const StyledInputGroup = styled(InputGroup)`\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => `${theme.outerShadow}, ${theme.innerShadow}`};\n\n  &:focus {\n    border-color: ${({ theme }) => theme.primary.main};\n  }\n`\n\n// Search bar input\nexport const StyledInput = styled(FormControl)`\n  padding: 25px 20px !important;\n  padding-left: 0 !important;\n  background-color: ${({ theme }) => theme.black};\n  border-color: transparent;\n  color: ${({ theme }) => theme.faded};\n\n  &:focus {\n    background-color: ${({ theme }) => theme.black};\n    border-color: transparent;\n    border-bottom: 1px solid ${({ theme }) => transparentize(0.6, theme.primary.main)};\n    color: ${({ theme }) => theme.faded};\n    outline: none;\n    box-shadow: none;\n  }\n`\n\n// Search bar input icon\nexport const StyledInputIcon = styled(InputGroup.Text)`\n  background-color: ${({ theme }) => theme.black};\n  border-color: transparent;\n`\n","import React from 'react'\nimport { Search } from 'react-feather'\nimport useDebounce from '@rooks/use-debounce'\nimport { StyledInputGroup, StyledInputIcon, StyledInput } from './SearchBar.styles'\n\n// Props\ntype Props = {\n  onSearch: (query: string) => void\n}\n\n/**\n * Search bar component\n */\nconst SearchBar: React.FC<Props> = ({ onSearch }) => {\n  // Debounce the search to avoid sending too much requests to the API\n  const debounceSearch = useDebounce((query: string) => {\n    onSearch(query)\n  }, 300)\n\n  // Change event on the search bar input\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    debounceSearch(e.target.value)\n  }\n\n  // Render\n  return (\n    <StyledInputGroup>\n      <StyledInputGroup.Prepend>\n        <StyledInputIcon>\n          <Search />\n        </StyledInputIcon>\n      </StyledInputGroup.Prepend>\n      <StyledInput\n        size=\"lg\"\n        type=\"text\"\n        placeholder=\"Search for an album\"\n        onChange={handleChange}\n      />\n    </StyledInputGroup>\n  )\n}\n\nexport default SearchBar\n","import { AlbumArtist, AlbumCover } from 'requests/albums/albums.request.types'\nimport humanizeDuration from 'humanize-duration'\n\n// Instanciate humanizer with custom language for short litteral units\nconst shortEnHumanizer = humanizeDuration.humanizer({\n  language: 'shortEn',\n  languages: {\n    shortEn: {\n      h: () => 'h',\n      m: () => 'm',\n      s: () => 's',\n    },\n  },\n})\n\n/**\n * Get Album Cover\n *\n * @param {AlbumCover[]} images - album images fetched from the API\n * @return {string} - the first image below 300px width if found, or first image, or placeholder\n */\nexport const getImage = (images: AlbumCover[]): string => {\n  const image = images.find((img) => img.width <= 300)\n  if (image) {\n    return image.url\n  } else if (!image && images.length > 0) {\n    return images[0].url\n  } else {\n    // Placeholder\n    return 'https://recordsale.de/assets/record_placeholder-f3f829566497dc26b0abfae50ddeb5c7bc48fe1c58dc1c7fe62a26d64988b9c9.svg'\n  }\n}\n\n/**\n * Get Album Artists\n *\n * @param {AlbumArtist[]} artists - array of artists fetched from the API\n * @return {string} - a concatenation of all the artists names\n */\nexport const getArtists = (artists: AlbumArtist[]): string =>\n  artists.map((artist) => artist.name).join(', ')\n\n/**\n * Get Total Duration\n *\n * @param {AlbumTrack[]} tracks - album tracks fetched from the API\n * @return {string} - a humanized total duration of the album (sum of all tracks durations)\n */\nexport const getTotalDuration = (tracks: AlbumTrack[]): string => {\n  const durationMs = tracks.reduce((total, track) => total + track.duration_ms, 0)\n  return shortEnHumanizer(durationMs, { units: ['h', 'm'], round: true, delimiter: ' ' })\n}\n\n/**\n * Get Track Duration\n *\n * @param {number} durationMs - duration of the track in milliseconds\n * @return {string} - a humanized duraction for the track\n */\nexport const getTrackDuration = (durationMs: number): string =>\n  shortEnHumanizer(durationMs, { units: ['m', 's'], round: true, delimiter: ' ' })\n","import styled from 'styled-components/macro'\nimport { lg, md, sm, xl } from 'styles/media'\nimport { Link } from 'react-router-dom'\n\n// Album link\nexport const StyledLink = styled(Link)`\n  &:hover {\n    text-decoration: none;\n  }\n`\n\n// Album container\nexport const StyledAlbum = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.white};\n`\n\n// Cover card\nexport const Cover = styled.div`\n  border-radius: 10px;\n  height: 150px;\n  padding: 10px;\n  box-shadow: ${({ theme }) => `${theme.outerShadow}, ${theme.innerShadow}`};\n  background-color: ${({ theme }) => theme.black};\n  margin-bottom: 5px;\n\n  ${sm(`\n    height: 180px;\n  `)}\n\n  ${md(`\n    height: 200px;\n  `)}\n\n  ${lg(`\n    height: 220px;\n  `)}\n\n  ${xl(`\n    height: 250px;\n  `)}\n`\n\n// Cover image\nexport const CoverImg = styled.img`\n  border-radius: 10px;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`\n\n// Textual informations (name, artist)\nexport const Infos = styled.div`\n  padding-left: 10px;\n  display: flex;\n  flex-direction: column;\n`\n\n// Artist\nexport const MadeBy = styled.small`\n  color: ${({ theme }) => theme.faded};\n`\n","import React, { useState, useEffect } from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { AlbumResult } from 'requests/albums/albums.request.types'\nimport { getArtists, getImage } from 'helpers/album'\nimport { StyledLink, StyledAlbum, Cover, CoverImg, Infos, MadeBy } from './SearchResults.styles'\n\n// Props\ntype Props = {\n  results: AlbumResult[]\n}\n\n/**\n * Show search results for an album query\n */\nconst SearchResults: React.FC<Props> = ({ results }) => {\n  const [albums, setAlbums] = useState<Album[]>([])\n\n  // Convert search results in albums to display\n  useEffect(() => {\n    setAlbums(\n      results.map((result) => ({\n        ...result,\n        image: getImage(result.images),\n        artists: getArtists(result.artists),\n      }))\n    )\n  }, [results])\n\n  // Render\n  return (\n    <Row>\n      {albums.map((album, idx) => (\n        <Col key={idx} xs={6} md={4} lg={3} className=\"mb-3\">\n          <StyledLink to={`/album/${album.id}`}>\n            <StyledAlbum>\n              <Cover>\n                <CoverImg src={album.image} alt={`${album.name} cover`} />\n              </Cover>\n              <Infos>\n                <span>{album.name}</span>\n                <MadeBy>by {album.artists}</MadeBy>\n              </Infos>\n            </StyledAlbum>\n          </StyledLink>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default SearchResults\n","import { encode } from 'js-base64'\n\n// Config for Spotify Web API\nexport const apiConfig = {\n  timeout: 30000,\n  baseURL: process.env.REACT_APP_SPOTIFY_API_URL,\n  headers: {\n    common: {\n      'Cache-Control': 'no-cache, no-store, must-revalidate',\n      Pragma: 'no-cache',\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  },\n}\n\n// Encode client ID and SECRET in base 64\nexport const authHash = encode(\n  `${process.env.REACT_APP_SPOTIFY_CLIENT_ID}:${process.env.REACT_APP_SPOTIFY_CLIENT_SECRET}`\n)\n","import axios, { AxiosInstance } from 'axios'\nimport { apiConfig } from './apiConfig'\nimport Cookies from 'js-cookie'\n\nconst axiosInstance: AxiosInstance = axios.create({\n  ...apiConfig,\n  headers: {\n    ...apiConfig.headers,\n  },\n})\n\n// Request interceptor to set authorization header\naxiosInstance.interceptors.request.use(\n  async (config) => {\n    const token = Cookies.get('token')\n    config.headers = {\n      Authorization: `Bearer ${token}`,\n    }\n    return config\n  },\n  (error) => {\n    Promise.reject(error)\n  }\n)\n\n// Export a \"singleton\" of the api to use anywhere\nexport default axiosInstance\n","import api from '../api'\nimport { SearchAlbumsResponse } from './albums.request.types'\n\n/**\n * Perform an album search with Spotify's API\n *\n * @param {string} search - the query\n * @param {number} offset - for pagination\n */\nexport const searchAlbums = async (\n  search: string,\n  offset = 0\n): Promise<SearchAlbumsResponse | null> => {\n  try {\n    const encodedSearh = encodeURIComponent(search)\n    const response = await api.get(`search?q=${encodedSearh}&type=album&offset=${offset}`)\n    return response.data\n  } catch (error) {\n    console.error('SEARCH ALBUMS / ', error)\n    return null\n  }\n}\n","import React from 'react'\nimport { ButtonProps, default as BootstrapButton } from 'react-bootstrap/Button'\nimport styled from 'styled-components/macro'\nimport { darken } from 'polished'\n\n// Props\ninterface Props extends ButtonProps {\n  loading?: boolean\n}\n\n// Style\nconst StyledButton = styled(BootstrapButton)`\n  background-color: ${(props) => props.theme.primary.main} !important;\n  border-color: ${(props) => props.theme.primary.main} !important;\n  color: ${(props) => props.theme.primary.contrastText} !important;\n  outline: none !important;\n  box-shadow: none !important;\n  border-radius: 1rem;\n  padding: 5px 20px;\n  box-shadow: ${(props) => props.theme.outerShadow} !important;\n\n  &:hover {\n    background-color: ${(props) => darken(0.1, props.theme.primary.main)} !important;\n    border-color: ${(props) => darken(0.1, props.theme.primary.main)} !important;\n  }\n`\n\n/**\n * A generic custom Bootstrap button\n */\nconst Button: React.FC<Props> = ({ children, ...props }) => {\n  const { loading } = props\n  return (\n    <StyledButton disabled={loading === true} {...props}>\n      {children}\n      {loading === true && '...'}\n    </StyledButton>\n  )\n}\n\nexport default Button\n","import React, { useEffect, useState } from 'react'\n\nimport SearchNbResults from 'components/Home/SearchNbResults'\nimport SearchBar from 'components/Home/SearchBar'\nimport SearchResults from 'components/Home/SearchResults'\nimport { searchAlbums } from 'requests/albums/albums.request'\nimport { SearchAlbumsResponse } from 'requests/albums/albums.request.types'\nimport Button from 'components/Shared/Button'\nimport { useHistory, useLocation } from 'react-router-dom'\n\n/**\n * Home Section\n *\n * Search bar, search results and \"show more\" button\n */\nconst Home: React.FC = () => {\n  const [results, setResults] = useState<SearchAlbumsResponse | null>(null)\n  const [query, setQuery] = useState('')\n  const [moreLoading, setMoreLoading] = useState(false)\n  const history = useHistory()\n  const search = useLocation().search\n\n  // Check if URL contains a query\n  // If so, launch the corresponding search request\n  useEffect(() => {\n    const query = new URLSearchParams(search).get('q')\n    if (query && query?.trim().length > 0) {\n      handleSearch(query)\n    }\n  }, [])\n\n  /**\n   * Trigger an API call to search albums\n   * @param {string} query - user query\n   */\n  const handleSearch = async (query: string) => {\n    setQuery(query)\n    if (query.trim().length === 0) {\n      // If query is empty, reset results in state\n      setResults(null)\n      history.push({ pathname: '/' })\n    } else {\n      // Update state with results from API\n      const searchResults = await searchAlbums(query)\n      setResults(searchResults)\n      history.push({\n        pathname: '/',\n        search: `?q=${encodeURIComponent(query)}`,\n      })\n    }\n  }\n\n  /**\n   * Trigger an API call to show more results for current query\n   */\n  const handleShowMore = async () => {\n    if (!results) return\n    setMoreLoading(true)\n    const { offset, limit, items } = results.albums\n    const moreResults = await searchAlbums(query, offset + limit)\n    if (moreResults && moreResults.albums.items.length > 0) {\n      // Update the state with the new offset\n      // and adds new results to current results\n      setResults({\n        albums: {\n          ...results.albums,\n          offset: moreResults.albums.offset,\n          items: [...items, ...moreResults.albums.items],\n        },\n      })\n    }\n    setMoreLoading(false)\n  }\n\n  // Render\n  const total = results?.albums.total || 0\n  return (\n    <>\n      <SearchBar onSearch={handleSearch} />\n      <div className=\"mt-5\">\n        {query.trim().length > 0 && <SearchNbResults query={query} total={total} />}\n        {results && results.albums.items.length > 0 && (\n          <>\n            <SearchResults results={results.albums.items} />\n            <div className=\"mt-3 mb-5 text-center\">\n              {total > results.albums.limit + results.albums.offset && (\n                <Button loading={moreLoading} onClick={handleShowMore}>\n                  Montrer plus\n                </Button>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","import React from 'react'\n\n/**\n * Layout for album page\n */\nconst AlbumLayout: React.FC = ({ children }) => {\n  return <div className=\"d-flex flex-column\">{children}</div>\n}\n\nexport default AlbumLayout\n","import styled from 'styled-components/macro'\nimport { md } from 'styles/media'\n\n// Main container\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${md(`\n    flex-direction: row;\n    height: 300px;\n    align-items: unset;\n  `)}\n`\n\n// Cover container (for the mobile card)\nexport const Cover = styled.div`\n  width: 250px;\n  height: 250px;\n  border-radius: 10px;\n  padding: 10px;\n  box-shadow: ${({ theme }) => `${theme.outerShadow}, ${theme.innerShadow}`};\n  background-color: ${({ theme }) => theme.black};\n  margin-bottom: 20px;\n\n  ${md(`\n    width: 300px;\n    height: 300px;\n    margin-right: 30px;\n    border-radius: 0;\n    box-shadow: unset;\n    background-color: unset;\n    padding: 0;\n    margin-bottom: 0px;\n  `)}\n`\n\n// Cover image\nexport const CoverImg = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`\n\n// Informations section\nexport const Infos = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${md(`\n    flex: 1;\n    padding: 10px 0;\n    justify-content: space-between;\n    align-items: unset;\n  `)}\n`\n\n// Main infos: album name + artist\nexport const MainInfos = styled.div`\n  text-align: center;\n\n  ${md(`\n    text-align: unset;\n  `)}\n`\n\n// Bottom line of informations section: technical infos + back button\nexport const BottomLine = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  ${md(`\n    flex-direction: row;\n  `)}\n`\n\n// Number of tracks, total duration, release date\nexport const Technical = styled.div`\n  color: ${(props) => props.theme.faded};\n  margin-bottom: 20px;\n\n  ${md(`\n    margin-bottom: unset;\n  `)}\n`\n","import React from 'react'\nimport { ChevronLeft } from 'react-feather'\nimport { useHistory } from 'react-router-dom'\nimport Button from 'components/Shared/Button'\nimport {\n  Container,\n  Cover,\n  CoverImg,\n  Infos,\n  MainInfos,\n  BottomLine,\n  Technical,\n} from './AlbumHeader.styles'\n\n// Props\ntype Props = {\n  album: AlbumDetails\n}\n\n/**\n * Album header component\n *\n * Shows album cover, name, artists and technical informations\n */\nconst AlbumHeader: React.FC<Props> = ({ album }) => {\n  const history = useHistory()\n\n  return (\n    <Container>\n      <Cover>\n        <CoverImg src={album.image} alt={`${album.name} album cover`} />\n      </Cover>\n      <Infos>\n        <MainInfos>\n          <h2>{album.name}</h2>\n          <p>by {album.artists}</p>\n        </MainInfos>\n        <BottomLine>\n          <Technical>\n            {album.tracks.length} tracks - {album.duration} - {album.release_date}\n          </Technical>\n          <Button onClick={() => history.goBack()}>\n            <ChevronLeft /> Back\n          </Button>\n        </BottomLine>\n      </Infos>\n    </Container>\n  )\n}\n\nexport default AlbumHeader\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\n// Container\nconst Container = styled.div`\n  border: 1px solid ${(props) => props.theme.white};\n  color: ${(props) => props.theme.white};\n  text-transform: uppercase;\n  font-size: 10px;\n  padding: 1px 5px;\n`\n\n/**\n * Explicit Component\n *\n * Used to show a little \"Explicit\" tag on explicit tracks\n */\nconst Explicit: React.FC = () => <Container>Explicit</Container>\n\nexport default Explicit\n","import styled from 'styled-components/macro'\nimport { md } from 'styles/media'\n\n// Component container\nexport const Container = styled.div`\n  margin: 30px 0;\n`\n\n// Represents a track's line in the tracklist\nexport const TrackRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  border-top: 1px solid ${(props) => props.theme.faded};\n`\n\n// Group of columns in the row\nexport const TrackColGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\n// Column in a row\ntype TrackColProps = {\n  strong?: boolean\n}\nexport const TrackCol = styled.div<TrackColProps>`\n  margin-right: 20px;\n  color: ${(props) => (props.strong ? props.theme.white : props.theme.faded)};\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  ${md(`\n    margin-right: 30px;\n  `)}\n`\n","import Explicit from 'components/Shared/Explicit'\nimport { getTrackDuration } from 'helpers/album'\nimport React from 'react'\nimport { Container, TrackCol, TrackColGroup, TrackRow } from './AlbumTracks.styles'\n\n// Props\ntype Props = {\n  tracks: AlbumTrack[]\n}\n\n/**\n * Album Tracks Component\n *\n * Shows the tracklist of an album\n */\nconst AlbumTracks: React.FC<Props> = ({ tracks }) => {\n  return (\n    <Container>\n      <TrackRow>\n        <TrackColGroup>\n          <TrackCol>#</TrackCol>\n          <TrackCol>Track</TrackCol>\n        </TrackColGroup>\n        <TrackColGroup>\n          <TrackCol>Length</TrackCol>\n        </TrackColGroup>\n      </TrackRow>\n      {tracks.map((track, idx) => (\n        <TrackRow key={idx}>\n          <TrackColGroup>\n            <TrackCol>{track.track_number}</TrackCol>\n            <TrackCol strong>{track.name}</TrackCol>\n          </TrackColGroup>\n          <TrackColGroup>\n            {track.explicit && (\n              <TrackCol>\n                <Explicit />\n              </TrackCol>\n            )}\n            <TrackCol>{getTrackDuration(track.duration_ms)}</TrackCol>\n          </TrackColGroup>\n        </TrackRow>\n      ))}\n    </Container>\n  )\n}\n\nexport default AlbumTracks\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport Alert from 'react-bootstrap/Alert'\nimport Spinner from 'react-bootstrap/Spinner'\nimport useSWR from 'swr'\n\nimport api from 'requests/api'\nimport { AlbumDetailsResponse } from 'requests/albums/albums.request.types'\nimport AlbumLayout from 'components/Album/AlbumLayout'\nimport { getArtists, getImage, getTotalDuration } from 'helpers/album'\nimport AlbumHeader from 'components/Album/AlbumHeader'\nimport AlbumTracks from 'components/Album/AlbumTracks'\n\n// SWR Fetcher\nconst fetcher = (query: string) => api.get(query).then((r) => r.data)\n\n/**\n * Album section\n *\n * View details about the album, and its tracklist\n */\nconst Album: React.FC = () => {\n  const { albumId } = useParams<{ albumId: string }>()\n  const { data, error } = useSWR<AlbumDetailsResponse>(`/albums/${albumId}`, fetcher)\n\n  // An error occured while fetching album details\n  if (error) {\n    return (\n      <AlbumLayout>\n        <Alert variant=\"danger\">W'oops, something went wrong</Alert>\n      </AlbumLayout>\n    )\n  }\n\n  // Loading state\n  if (!data) {\n    return (\n      <AlbumLayout>\n        <div className=\"d-flex flex-row justify-content-center align-items-center\">\n          <Spinner animation=\"border\" role=\"status\" className=\"mr-3\" /> Loading album content...\n        </div>\n      </AlbumLayout>\n    )\n  }\n\n  const tracks: AlbumTrack[] = data.tracks.items\n  const album: AlbumDetails = {\n    ...data,\n    image: getImage(data.images),\n    artists: getArtists(data.artists),\n    duration: getTotalDuration(tracks),\n    tracks,\n  }\n  return (\n    <AlbumLayout>\n      <AlbumHeader album={album} />\n      <AlbumTracks tracks={album.tracks} />\n    </AlbumLayout>\n  )\n}\n\nexport default Album\n","import React from 'react'\nimport Button from 'components/Shared/Button'\nimport qs from 'qs'\nimport { useLocation } from 'react-router-dom'\nimport { authHash } from 'requests/apiConfig'\nimport Alert from 'react-bootstrap/Alert'\n\n// Base Url for Spotify Authentication\nconst query = `${process.env.REACT_APP_SPOTIFY_API_AUTH_URL}/authorize`\n\n// Redirect URI\nconst redirectUri = window.location.origin + process.env.PUBLIC_URL\n\n// Query params\nconst queryParams = qs.stringify({\n  client_id: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\n  response_type: 'token',\n  redirect_uri: redirectUri,\n  state: authHash,\n})\n\n/**\n * Auth section\n *\n * Shows a button that opens Spotify Authentication Page\n */\nconst Auth: React.FC = () => {\n  const { search } = useLocation()\n  const params = new URLSearchParams(search)\n  const error = params.get('error')\n\n  return (\n    <div className=\"text-center mt-5\">\n      <a href={`${query}?${queryParams}`}>\n        <Button>Login to Spotify</Button>\n      </a>\n      {error && (\n        <Alert variant=\"danger\" className=\"mt-5\">\n          You need to allow Spotify Browser to access basic informations about your account in order\n          to be able to browser through Spotify's albums collection\n        </Alert>\n      )}\n    </div>\n  )\n}\n\nexport default Auth\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport { Route, Switch, useLocation } from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport qs from 'qs'\n\nimport Header from 'components/Shared/Header'\nimport Home from 'sections/Home'\nimport Album from 'sections/Album'\nimport Auth from 'sections/Auth'\nimport { authHash } from 'requests/apiConfig'\n\nconst App: React.FC = () => {\n  const { hash } = useLocation()\n\n  // If hash was found in query\n  if (hash.length > 0) {\n    // Check if the hash corresponds to a response from Spotify after user authentication\n    const { access_token, expires_in, state } = qs.parse(hash.substring(1))\n    if (state === authHash && access_token && expires_in) {\n      // Access granted after user authentication to Spotify\n      Cookies.set('token', access_token, { expires: Number(expires_in) })\n    }\n  }\n\n  const token = Cookies.get('token')\n  return (\n    <Container>\n      <Header />\n      <Switch>\n        <Route path=\"/album/:albumId\">\n          <Album />\n        </Route>\n        <Route path=\"/\">{token ? <Home /> : <Auth />}</Route>\n      </Switch>\n    </Container>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { DefaultTheme } from 'styled-components'\nimport { transparentize } from 'polished'\n\nconst outerShadows = {\n  shadow1: '-8px -8px 30px #393E44',\n  shadow2: '8px 8px 30px #101316',\n  shadow3: `-1px -1px 60px ${transparentize(0.9, '#21272C')}`,\n}\n\nconst innerShadows = {\n  shadow1: `inset -6px -6px 12px ${transparentize(0.5, '#161616')}`,\n  shadow2: `inset 6px 6px 12px #24292D`,\n  shadow3: `inset -1px -1px 60px ${transparentize(0.9, '#24292D')}`,\n}\n\nexport const theme: DefaultTheme = {\n  black: '#21272C',\n  white: '#F5F5F5',\n  faded: transparentize(0.6, 'white'),\n  primary: {\n    main: '#1DB854',\n    contrastText: '#ffffff',\n  },\n  outerShadow: `${outerShadows.shadow1}, ${outerShadows.shadow2}, ${outerShadows.shadow3}`,\n  innerShadow: `${innerShadows.shadow1}, ${innerShadows.shadow2}, ${innerShadows.shadow3}`,\n}\n","import { createGlobalStyle } from 'styled-components/macro'\nimport { theme } from './theme'\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    background-color: ${theme.black};\n    color: ${theme.white};\n  }\n`\n\nexport default GlobalStyles\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { ThemeProvider } from 'styled-components/macro'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { theme } from './styles/theme'\nimport GlobalStyles from './styles/GlobalStyles'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}